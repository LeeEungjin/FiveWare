<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="supplierMapper">
  
  	<!-- use stop Start -->
  	<update id="supplierStop" parameterType="java.util.Map">
  		update supplier set use=#{use} where code=#{code}
  	</update>
  	<!-- use stop End -->
  
  	<!-- delete Start -->
  	<delete id="supplierDelete" parameterType="java.lang.String">
  		delete from supplier where code=#{code}
  	</delete>
  	<!-- delete End -->
  
  	<!-- update Start -->
  	<update id="supplierUpdate" parameterType="SupplierDTO">
  		update supplier set classification=#{classification}, name=#{name}, business_number=#{business_number},
  			representative=#{representative}, division=#{division}, division_mail=#{division_mail}, 
  			bank=#{bank}, account_number=#{account_number}
  		where code=#{code}
  	</update>
  	<!-- update End -->
  
  
  	<!-- insert Start -->
	<select id="makeCode" resultType="java.lang.String">
		select CHR(65) || LPAD(SUPPLIER_CODE.NEXTVAL,3,0) from dual
	</select>
	
  	<insert id="supplierWrite" parameterType="SupplierDTO">
  		insert into supplier values(
  			#{code}, #{classification}, #{name}, #{business_number},
  			#{representative}, #{division}, #{division_mail},
  			#{bank}, #{account_number}, 'true'
  		)
  	</insert>
  	<!-- insert End -->
  	
  	
  	<!-- selectOne Start-->
  	<select id="supplierOne" parameterType="java.lang.String" resultType="SupplierDTO">
  		select * from supplier where code=#{code}
  	</select>
  	<!-- selectOne End -->
  	
  	
  	<!-- totalCount Start -->
  	<select id="totalCount" resultType="int">
		select nvl(count(code), 0) from supplier
		where classification like '%'||#{search1}||'%' and name like '%'||#{search2}||'%'
  	</select>
  	<!-- totalCount End -->
  	
  	
  	<!-- selectList Start -->
  	<select id="supplierList" parameterType="java.util.Map" resultType="SupplierDTO">
  		select * from
  		(select rownum R, S.* from
  		(select * from supplier
  		where classification like '%'||#{search1}||'%' AND name like '%'||#{search2}||'%'
  		order by code desc) S)
  		where R between #{startRow} and #{lastRow}
  	</select>
  	<!-- selectList End -->
  	
  </mapper>